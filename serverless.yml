service: fossil-marketplace
app: fossil-marketplace
plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  versionFunctions: false
  stage: ${opt:stage, "dev"}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:BatchGetItem"
        - "dynamodb:BatchWriteItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
      Resource:
        - Fn::GetAtt: [EventStore, Arn]
        - Fn::Join:
            - '/'
            - - Fn::GetAtt: [EventStore, Arn]
              - '*'

custom:
  eventStoreTableName: fossil-mp-event-store
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
      port: 8800
      dbPath: ./.dynamodb
      heapInitial: 200m
      heapMax: 1g
      convertEmptyValues: true

resources:
  - Resources:
      EventStore:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:custom.eventStoreTableName}
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          AttributeDefinitions:
            - AttributeName: aggregateKey
              AttributeType: S
            - AttributeName: timestamp
              AttributeType: N
          KeySchema:
            - AttributeName: aggregateKey
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE

cors-config: &cors-config
  origin: '*'
  headers:
    - Content-Type
    - Authorization
    - X-Amz-Date
    - X-Amz-Security-Token
    - X-Amz-User-Agent
    - X-Api-Key

default-env: &default-env
  STAGE: ${self:provider.stage}
  NODE_ENV: ${self:provider.stage}
  API_REGION: "#{AWS::Region}"
  EVENT_STORE_TABLE_NAME: ${self:custom.eventStoreTableName}

functions:
  hello:
    handler: hello.helloWorld
    events:
      - http:
          path: hello-world
          method: GET
          cors:
            <<: *cors-config
  CreateAccount:
    handler: controllers/account.createAccount
    environment:
      <<: *default-env
    events:
      - http:
          path: create-account
          method: POST
          cors:
            <<: *cors-config
  ListItem:
    handler: controllers/account.listItem
    environment:
      <<: *default-env
    events:
      - http:
          path: list-item
          method: POST
          cors:
            <<: *cors-config
